<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>回溯算法_全排列</title>
      <link href="/AmberZXH.github.io/2021/04/01/hui-su-suan-fa-quan-pai-lie/"/>
      <url>/AmberZXH.github.io/2021/04/01/hui-su-suan-fa-quan-pai-lie/</url>
      
        <content type="html"><![CDATA[<p>我是短小精悍的文章摘要(๑•̀ㅂ•́)و✧</p><span id="more"></span><img src="/AmberZXH.github.io/2021/04/01/hui-su-suan-fa-quan-pai-lie/example.jpg" class=""><h1 id="title1-0"><a href="#title1-0" class="headerlink" title="title1.0"></a>title1.0</h1><h2 id="title1-1"><a href="#title1-1" class="headerlink" title="title1.1"></a>title1.1</h2><h1 id="title2-0"><a href="#title2-0" class="headerlink" title="title2.0"></a>title2.0</h1><h2 id="title2-1"><a href="#title2-1" class="headerlink" title="title2.1"></a>title2.1</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ret<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        Arrays<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> right <span class="token operator">=</span> len<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">while</span><span class="token punctuation">(</span>right<span class="token operator">></span>left<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">int</span> temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token operator">&lt;</span>temp<span class="token punctuation">)</span><span class="token punctuation">{</span>                right<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> target<span class="token operator">></span> temp<span class="token punctuation">)</span><span class="token punctuation">{</span>                left<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                ret<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>left<span class="token punctuation">;</span>                ret<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>right<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>                        </code></pre><img src="/AmberZXH.github.io/2021/04/01/hui-su-suan-fa-quan-pai-lie/2021-04-01-22-09.jpg" class="">]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
